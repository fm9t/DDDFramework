// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZsjTest.Domain.Repository.Impl.SQLite.UserDomain;

#nullable disable

namespace ZsjTest.Domain.Repository.Impl.SQLite.DbMigrations.userinfodb
{
    [DbContext(typeof(UserInfoDbContextImpl))]
    partial class UserInfoDbContextImplModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.17");

            modelBuilder.Entity("ZsjTest.Domain.UserMgr.UserInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AccountDisableDate")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("ApproveFlag")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ConsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("DeleteFlag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DirectLine")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("EnableFlag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EngFirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("EngLastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("EngMidName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Failedpasswordanswerattmpstart")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Failedpasswordanswerattmptcnt")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Failedpasswordattemptcount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Failedpasswordattemptwndwstart")
                        .HasColumnType("TEXT");

                    b.Property<string>("FaxNum")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastLockedoutDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastPasswordchangedDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("LeaveNoticeMailedFlag")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("LockedoutFlag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoginName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LowercaseLoginName")
                        .HasColumnType("TEXT");

                    b.Property<string>("NativeName")
                        .HasColumnType("TEXT");

                    b.Property<string>("OfficeMobile")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("OnlineFlag")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Password")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordAnswer")
                        .HasColumnType("BLOB");

                    b.Property<bool?>("PasswordExpiredFlag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordQuestion")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneExt")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Readonly")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserGuid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserNumber")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserType")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreateBy = 123,
                            CreateDate = new DateTime(2023, 1, 10, 15, 10, 10, 0, DateTimeKind.Unspecified),
                            LastUpdateBy = 456,
                            LastUpdateDate = new DateTime(2023, 1, 13, 9, 8, 8, 0, DateTimeKind.Unspecified),
                            LoginName = "sjzhou",
                            NativeName = "张三",
                            Password = new byte[] { 194, 227, 181, 159, 22, 112, 53, 73, 239, 161, 94, 109, 174, 200, 222, 24 },
                            UserGuid = "dda6f9ee803344dc800447c720cfa7b0"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
