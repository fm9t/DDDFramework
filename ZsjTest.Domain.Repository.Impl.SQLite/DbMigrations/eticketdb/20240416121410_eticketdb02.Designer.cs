// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZsjTest.Domain.Repository.Impl.SQLite.ETicketDomain;

#nullable disable

namespace ZsjTest.Domain.Repository.Impl.SQLite.DbMigrations.eticketdb
{
    [DbContext(typeof(ETicketDbContextImpl))]
    [Migration("20240416121410_eticketdb02")]
    partial class eticketdb02
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.17");

            modelBuilder.Entity("ZsjTest.Domain.ETicketMgr.ETicket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicationName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ApproveDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ApprovedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AssignDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AssignTo")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("BeginBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("BeginDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CancelDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CancelledBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cancelreason")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ClosedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Countermeasure")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DebugDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DebuggedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeliverDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DeliveredBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("EndBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EndUser")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExpectedCostSaveings")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpectedIntangibleBenefits")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpectedTangibleBenefits")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("FactTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Impactanalysis")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IssueType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LastUpdateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("LastUpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModuleName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MoveFileList")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Noteststepflag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Performance")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PlanTime")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Priority")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("ProgramMoveFlag")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("RaiseDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RaisedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("RaisedDept")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RequestTime")
                        .HasColumnType("TEXT");

                    b.Property<byte?>("ResponsePriority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ResponsePriorityText")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(8)
                        .HasColumnType("BLOB");

                    b.Property<decimal?>("SatisfactoryLevel")
                        .HasColumnType("TEXT");

                    b.Property<string>("SatisfactoryReason")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Schecomdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Solution")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Status")
                        .HasColumnType("TEXT");

                    b.Property<string>("TicketSubject")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Workloadestimation")
                        .HasColumnType("TEXT");

                    b.HasKey("TicketId");

                    b.ToTable("ETickets");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            ApplicationName = "def",
                            CreateBy = 123,
                            CreateDate = new DateTime(2023, 1, 10, 15, 10, 10, 0, DateTimeKind.Unspecified),
                            Description = "问题描述如下。",
                            LastUpdateBy = 456,
                            LastUpdateDate = new DateTime(2023, 1, 13, 9, 8, 8, 0, DateTimeKind.Unspecified),
                            ModuleName = "abcd",
                            Solution = "解决方案描述",
                            Status = 1m,
                            TicketSubject = "Test Subject",
                            TypeName = "Change Request"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
